import { OpenAI } from 'langchain/llms/openai';
import { PromptTemplate } from 'langchain/prompts';

const createTitleText = async (text) => {
    console.log({ textInsideCreateTitleText: text });
    
    const llm = new OpenAI({
        temperature: 0.0,
        openAIApiKey: process.env.OPENAI_API_KEY,
    });

    const template = `You are the title creator tool based on the 10-sentence introduction of the summary. You are serving for students of the school and universities that will read your title and you need to bait them with your interesting article.

                Here is a few examples how you need to act:
                
                Input:  <<<I made an experiment. I asked ChatGPT to read 1,000 reddit posts about ChatGPT. I made a small experiment to show an example of how AI can change journalism. If I ask you to think about AI in journalism, I reckon there's a good chance you're picturing journalists being replaced by machines and an internet full of content generated by AI. I'm going to talk about these risks but I also want to talk about the new types of journalism that became possible with AI. I'll show you how I programmed my experiment and the result but first I want to talk about how AI is already changing journalism. In a newsroom the first step for journalists is to find out what they're going to write about. AI is changing journalism already at this stage. Algorithms can sift through all the noise and help journalists find trends, events and anomalies. Take the example of Reuters. In 2016 they developed a machine learning algorithm that automatically detects events on Twitter by the minute. When an earthquake broke out in Ecuador in 2017 they claimed our journalists had a head start of 18 minutes over other news organizations to report on the situation.>>> 
                Output: Unveiling the Future of Journalism: How AI is Revolutionizing News Reporting and Beyond

                Also, ignore text about adds, such as "If you'd like to subscribe to the Huberman Lab Podcast premium channel, please go to hubermanlab.com slash premium." and other add integration in the video. Do not include output.

                Okay, now the text will be between 3 < and > symbols.
                
                Input: <<<{text}>>>.
                Output: YOUR RESPONSE HERE.`;

    const prompt = new PromptTemplate({
        template: template,
        inputVariables: ['text'],
    });

    const formattedTitle = await prompt.format({ text: text });
    const result = await llm.call(formattedTitle);

    console.log({ title: result });

    return result;
};

export default createTitleText;
